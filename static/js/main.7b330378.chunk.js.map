{"version":3,"sources":["model/UserStatus.tsx","components/Tag.tsx","components/StatusMarker.tsx","components/UserStatusItem.tsx","components/StatusColumn.tsx","components/MenuBar.tsx","components/Dashboard.tsx","model/User.tsx","serviceWorker.ts","index.tsx","controllers/UserStatusController.tsx"],"names":["UserStatus","Tag","render","classes","_this","props","style","color","borderColor","react_default","a","createElement","className","tag","text","Component","withStyles","theme","createStyles","border","paddingLeft","paddingRight","borderRadius","paddingBottom","fontSize","typography","subtitle2","StatusMarker","backgroundColor","marker","width","height","UserStatusItem","statusText","getStatusText","status","statusColor","getStatusColor","react_beautiful_dnd_esm","draggableId","user","initials","index","provided","snapshot","Object","assign","card","ref","innerRef","draggableProps","dragHandleProps","cardContent","Avatar","avatarRing","avatar","src","avatarUrl","components_StatusMarker","statusDot","concat","userName","name","components_Tag","Office","Remote","Absent","padding","spacing","margin","marginLeft","display","alignItems","flexDirection","fontWeight","palette","disabled","flexGrow","textAlign","fontWeightBold","StatusColumn","droppableId","toString","type","droppableProps","Grid","item","xs","container","justify","users","map","key","sm","components_UserStatusItem","placeholder","MenuBar","Paper","menuBar","square","elevation","title","date","availability","availabilityTag","availablePeopleCount","remotePeopleCount","absentPeopleCount","marginRight","Dashboard","onDragEnd","result","reason","destination","userInitials","dstColumnDroppableId","newStatus","getColumnStatusByDroppableId","statusController","setUserStatus","setState","Unknown","this","controller","availableUsers","getUsersWithStatus","remoteUsers","absentUsers","dashboard","components_MenuBar","length","statusField","statusColumn","components_StatusColumn","paddingTop","User","classCallCheck","Boolean","window","location","hostname","match","ReactDOM","components_Dashboard","removeUserFromLists","i","splice","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qGAAKA,2HCuBCC,6MACFC,OAAS,WAAM,IACHC,EAAYC,EAAKC,MAAjBF,QAEFG,EAAQ,CACVC,MAAOH,EAAKC,MAAME,MAClBC,YAAaJ,EAAKC,MAAME,OAG5B,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAKC,MAAMO,WACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQU,IAAKP,MAAOA,GAC/BF,EAAKC,MAAMS,qCAZdC,aAmBHC,cAtCA,SAACC,GAAD,OACXC,YAAa,CACTL,IAAK,CACDM,OAAQ,YACRC,YAAa,GACbC,aAAc,GACdC,aAAc,IACdC,cAAe,EACfC,SAAUP,EAAMQ,WAAWC,UAAUF,aA8BlCR,CAAmBf,GCvB5B0B,6MACFzB,OAAS,WAAM,IACHC,EAAYC,EAAKC,MAAjBF,QAEFG,EAAQ,CACVsB,gBAAiBxB,EAAKC,MAAME,OAGhC,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAKC,MAAMO,WACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQ0B,OAAQvB,MAAOA,mCAV5BS,aAiBZC,cAhCA,SAACC,GAAD,OACXC,YAAa,CACTW,OAAQ,CACJC,MAAO,GACPC,OAAQ,GACRT,aAAc,MA2BXN,CAAmBW,aFpC7B3B,6GAOUA,QGoDTgC,6MACF9B,OAAS,WAAM,IACHC,EAAYC,EAAKC,MAAjBF,QAEJ8B,EAAa7B,EAAK8B,cAAc9B,EAAKC,MAAM8B,QAC3CC,EAAchC,EAAKiC,eAAejC,EAAKC,MAAM8B,QAEjD,OACI1B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,YAAanC,EAAKC,MAAMmC,KAAKC,SAAUC,MAAO,GACpD,SAACC,EAAUC,GAAX,OACGnC,EAAAC,EAAAC,cAAA,MAAAkC,OAAAC,OAAA,CAAKlC,UAAWT,EAAQ4C,KAAMC,IAAKL,EAASM,UAAcN,EAASO,eAAoBP,EAASQ,iBAC5F1C,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQiD,aACpB3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQzC,UAAWT,EAAQmD,YACvB7C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQzC,UAAWT,EAAQoD,OAAQC,IAAKpD,EAAKC,MAAMmC,KAAKiB,aAE5DhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAc9C,UAAWT,EAAQwD,UAAWpD,MAAK,GAAAqD,OAAKxB,KACtD3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQsC,UAAWrC,EAAKC,MAAMmC,KAAKC,UACnDhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQ0D,UAAWzD,EAAKC,MAAMmC,KAAKsB,MACnDrD,EAAAC,EAAAC,cAACoD,EAAD,CAAKnD,UAAWT,EAAQgC,OAAQrB,KAAMmB,EAAY1B,MAAK,GAAAqD,OAAKxB,YAQ5EF,cAAgB,SAACC,GACrB,OAAIA,IAAWnC,EAAWgE,OAAe,YACrC7B,IAAWnC,EAAWiE,OAAe,WACrC9B,IAAWnC,EAAWkE,OAAe,SAClC,aAGH7B,eAAiB,SAACF,GACtB,OAAIA,IAAWnC,EAAWgE,OAAe,QACrC7B,IAAWnC,EAAWiE,OAAe,OACrC9B,IAAWnC,EAAWkE,OAAe,MAClC,qCArCcnD,aAyCdC,cA3FA,SAACC,GAAD,OACXC,YAAa,CACT6B,KAAM,CACFoB,QAASlD,EAAMmD,QAAQ,IAE3Bd,WAAY,CACRxB,MAAO,GACPC,OAAQ,GACRsC,QAAS,EAAIpD,EAAMmD,QAAQ,GAC3BE,WAAYrD,EAAMmD,QAAQ,GAC1BxC,gBAAiB,QAErB2B,OAAQ,CACJzB,MAAO,GACPC,OAAQ,GACRsC,OAAQpD,EAAMmD,QAAQ,GACtBxC,gBAAiB,QAErBwB,YAAa,CACTe,QAAS,GACTI,QAAS,OACTC,WAAY,SACZC,cAAe,MACf7C,gBAAiB,OACjBN,aAAc,GAElBqC,UAAW,CACPW,WAAY,GAAKrD,EAAMmD,QAAQ,IAEnC3B,SAAU,CACN6B,WAAYrD,EAAMmD,QAAQ,GAC1BM,WAAY,OACZnE,MAAOU,EAAM0D,QAAQ7D,KAAK8D,UAE9Bf,SAAU,CACNgB,SAAU,EACVC,UAAW,QACXJ,WAAYzD,EAAMQ,WAAWsD,eACtCT,WAAYrD,EAAMmD,QAAQ,IAErBjC,OAAQ,CACJmC,WAAYrD,EAAMmD,QAAQ,OAkDvBpD,CAAmBgB,GClF5BgD,6MACF9E,OAAS,WACL,OACIO,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAW2C,YAAa7E,EAAKC,MAAM8B,OAAO+C,WAAYC,KAAK,QACtD,SAACxC,EAAUC,GAAX,OACGnC,EAAAC,EAAAC,cAAA,MAAAkC,OAAAC,OAAA,CAAKlC,UAAU,gBAAgBoC,IAAKL,EAASM,UAAcN,EAASyC,gBAChE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX9E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMG,WAAS,EAACpB,QAAS,EAAGqB,QAAQ,UAE5BrF,EAAKC,MAAMqF,MAAMC,IAAI,SAACnD,GAClB,OACI/B,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMO,IAAKpD,EAAKC,SAAU6C,MAAI,EAACC,GAAI,GAAIM,GAAI,IACvCpF,EAAAC,EAAAC,cAACmF,EAAD,CAAgBtD,KAAMA,EAAML,OAAQ/B,EAAKC,MAAM8B,YAK9DQ,EAASoD,gDAlBnBhF,aA6BZC,cAtCA,SAACC,GAAD,OACXC,YAAa,KAqCFF,CAAmBgE,YCP5BgB,6MACF9F,OAAS,WAAM,IACHC,EAAYC,EAAKC,MAAjBF,QAER,OACIM,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOrF,UAAWT,EAAQ+F,QAASC,QAAQ,EAAMC,UAAW,GACxD3F,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQkG,OAAxB,yBAGA5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQmG,MAAxB,oBAGA7F,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQoG,cACpB9F,EAAAC,EAAAC,cAACoD,EAAD,CAAKnD,UAAWT,EAAQqG,gBAAiB1F,KAAI,GAAA8C,OAAKxD,EAAKC,MAAMoG,sBAAwBlG,MAAM,UAC3FE,EAAAC,EAAAC,cAACoD,EAAD,CAAKnD,UAAWT,EAAQqG,gBAAiB1F,KAAI,GAAA8C,OAAKxD,EAAKC,MAAMqG,mBAAqBnG,MAAM,SACxFE,EAAAC,EAAAC,cAACoD,EAAD,CAAKnD,UAAWT,EAAQqG,gBAAiB1F,KAAI,GAAA8C,OAAKxD,EAAKC,MAAMsG,mBAAqBpG,MAAM,wCAftFQ,aAsBPC,cAxDA,SAACC,GAAD,OACXC,YAAa,CACTgF,QAAS,CACLpE,MAAO,OACPC,OAAQ,GACRoC,QAASlD,EAAMmD,QAAQ,GACvBG,QAAS,OACTE,cAAe,MACfD,WAAY,UAEhB6B,MAAO,CACH/B,WAAYrD,EAAMmD,QAAQ,GAC1BM,WAAYzD,EAAMQ,WAAWsD,gBAEjCuB,KAAM,CACFzB,SAAU,EACVP,WAAYrD,EAAMmD,QAAQ,IAE9BmC,aAAc,CACVK,YAAa3F,EAAMmD,QAAQ,KAE/BoC,gBAAiB,CACbjC,QAAS,eACTqC,YAAa,GACbtC,WAAY,OAgCTtD,CAAmBgF,GChC5Ba,6MAkCMC,UAAY,SAACC,EAAoBpE,GACrC,GAAsB,SAAlBoE,EAAOC,QAA2C,MAAtBD,EAAOE,YAAvC,CAEA,IAAIC,EAAeH,EAAOxE,YACtB4E,EAAuBJ,EAAOE,YAAYhC,YAC1CmC,EAAYhH,EAAKiH,6BAA6BF,GAElD/G,EAAKC,MAAMiH,iBAAiBC,cAAcL,EAAcE,GACxDhH,EAAKoH,SAAS,QAGVH,6BAA+B,SAACpC,GACpC,OAAIA,IAAgBjF,EAAWgE,OAAOkB,WAAmBlF,EAAWgE,OAChEiB,IAAgBjF,EAAWiE,OAAOiB,WAAmBlF,EAAWiE,OAChEgB,IAAgBjF,EAAWkE,OAAOgB,WAAmBlF,EAAWkE,OAC7DlE,EAAWyH,iFAhDb,IACGtH,EAAYuH,KAAKrH,MAAjBF,QAEJwH,EAAaD,KAAKrH,MAAMiH,iBAExBM,EAAiBD,EAAWE,mBAAmB7H,EAAWgE,QAC1D8D,EAAcH,EAAWE,mBAAmB7H,EAAWiE,QACvD8D,EAAcJ,EAAWE,mBAAmB7H,EAAWkE,QAE3D,OACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAWT,EAAQ6H,WACpBvH,EAAAC,EAAAC,cAACsH,EAAD,CACIxB,qBAAsBmB,EAAeM,OACrCxB,kBAAmBoB,EAAYI,OAC/BvB,kBAAmBoB,EAAYG,SAEnCzH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAiBwE,UAAWY,KAAKZ,WAC7BrG,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMG,WAAS,EAAC5E,UAAWT,EAAQgI,YAAa/D,QAAS,EAAGqB,QAAQ,UAChEhF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,EAAC3E,UAAWT,EAAQiI,cAC7B3H,EAAAC,EAAAC,cAAC0H,EAAD,CAAclG,OAAQnC,EAAWgE,OAAQ0B,MAAOkC,KAEpDnH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,EAAC3E,UAAWT,EAAQiI,cAC7B3H,EAAAC,EAAAC,cAAC0H,EAAD,CAAclG,OAAQnC,EAAWiE,OAAQyB,MAAOoC,KAEpDrH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,EAAC3E,UAAWT,EAAQiI,cAC7B3H,EAAAC,EAAAC,cAAC0H,EAAD,CAAclG,OAAQnC,EAAWkE,OAAQwB,MAAOqC,eA1BpDhH,aAqDTC,cAzEA,SAACC,GAAD,OACXC,YAAa,CACT8G,UAAW,GAEXG,YAAa,CACTrG,MAAO,OACP+C,SAAU,EACVyD,WAAYrH,EAAMmD,QAAQ,GAC1BhD,YAAaH,EAAMmD,QAAQ,GAC3B/C,aAAcJ,EAAMmD,QAAQ,IAEhCgE,aAAc,MA8DPpH,CAAmB6F,GCnFb0B,EAKjB,SAAAA,EAAY9F,EAAkBqB,EAAcL,GAAoBZ,OAAA2F,EAAA,EAAA3F,CAAA6E,KAAAa,GAAAb,KAJhEjF,cAI+D,EAAAiF,KAH/D5D,UAG+D,EAAA4D,KAF/DjE,eAE+D,EAC3DiE,KAAKjF,SAAWA,EAChBiF,KAAK5D,KAAOA,EACZ4D,KAAKjE,UAAYA,GCILgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAS5I,OACLO,EAAAC,EAAAC,cAACoI,EAAD,CAAWzB,iBAAkB,qDCJrB/D,OAAS,iJAETqE,eAAiB,CACrB,IAAIW,EAAK,MAAO,eAAgBb,KAAKnE,QACrC,IAAIgF,EAAK,MAAO,iBAAkBb,KAAKnE,QACvC,IAAIgF,EAAK,MAAO,gBAAiBb,KAAKnE,QACtC,IAAIgF,EAAK,MAAO,uBAAwBb,KAAKnE,cAEzCuE,YAAc,CAClB,IAAIS,EAAK,MAAO,gBAAiBb,KAAKnE,QACtC,IAAIgF,EAAK,MAAO,mBAAoBb,KAAKnE,QACzC,IAAIgF,EAAK,MAAO,eAAgBb,KAAKnE,cAEjCwE,YAAc,CAClB,IAAIQ,EAAK,MAAO,gBAAiBb,KAAKnE,QACtC,IAAIgF,EAAK,MAAO,eAAgBb,KAAKnE,QACrC,IAAIgF,EAAK,MAAO,sBAAuBb,KAAKnE,QAC5C,IAAIgF,EAAK,MAAO,iBAAkBb,KAAKnE,QACvC,IAAIgF,EAAK,MAAO,eAAgBb,KAAKnE,cAGlCsE,mBAAqB,SAAC1F,GACzB,OAAIA,IAAWnC,EAAWgE,OAAe5D,EAAKwH,eAC1CzF,IAAWnC,EAAWiE,OAAe7D,EAAK0H,YAC1C3F,IAAWnC,EAAWkE,OAAe9D,EAAK2H,YACvC,SAGJR,cAAgB,SAACL,EAAsB/E,GAC1C,IAAIK,EAAOpC,EAAK4I,oBAAoB9B,GAExB,MAAR1E,IAEAL,IAAWnC,EAAWgE,OAAc5D,EAAKwH,eAAiBxH,EAAKwH,eAAehE,OAAOpB,GAChFL,IAAWnC,EAAWiE,OAAS7D,EAAK0H,YAAc1H,EAAK0H,YAAYlE,OAAOpB,GAC1EL,IAAWnC,EAAWkE,SAAS9D,EAAK2H,YAAc3H,EAAK2H,YAAYnE,OAAOpB,WAG/EwG,oBAAsB,SAAC9B,GAE3B,IADA,IAAI1E,EAAO,KACFyG,EAAI,EAAGA,EAAI7I,EAAKwH,eAAeM,SAAUe,EAC1C7I,EAAKwH,eAAeqB,GAAGxG,WAAayE,IACpC1E,EAAOpC,EAAKwH,eAAeqB,GAC3B7I,EAAKwH,eAAesB,OAAOD,EAAG,IAEtC,GAAa,OAATzG,EAAe,OAAOA,EAE1B,IAAKyG,EAAI,EAAGA,EAAI7I,EAAK0H,YAAYI,SAAUe,EACnC7I,EAAK0H,YAAYmB,GAAGxG,WAAayE,IACjC1E,EAAOpC,EAAK0H,YAAYmB,GACxB7I,EAAK0H,YAAYoB,OAAOD,EAAG,IAEnC,GAAa,OAATzG,EAAe,OAAOA,EAE1B,IAAKyG,EAAI,EAAGA,EAAI7I,EAAK2H,YAAYG,SAAUe,EACnC7I,EAAK2H,YAAYkB,GAAGxG,WAAayE,IACjC1E,EAAOpC,EAAK2H,YAAYkB,GACxB7I,EAAK2H,YAAYmB,OAAOD,EAAG,IAGnC,OAAOzG,MDvDX2G,SAASC,eAAe,SDgItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b330378.chunk.js","sourcesContent":["enum UserStatus {\r\n    Office,\r\n    Remote,\r\n    Absent,\r\n    Unknown\r\n}\r\n\r\nexport default UserStatus;","import React, { Component } from 'react';\r\nimport { Theme } from '@material-ui/core';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        tag: {\r\n            border: '1px solid',\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            borderRadius: 100,\r\n            paddingBottom: 2,\r\n            fontSize: theme.typography.subtitle2.fontSize\r\n        }\r\n    }\r\n);\r\n\r\nexport interface ITagProps extends WithStyles<typeof styles> {\r\n    className: string,\r\n    text: string,\r\n    color: string\r\n}\r\n\r\nclass Tag extends Component<ITagProps> {\r\n    render = () => {\r\n        const { classes } = this.props;\r\n\r\n        const style = {\r\n            color: this.props.color,\r\n            borderColor: this.props.color\r\n        };\r\n\r\n        return (\r\n            <div className={this.props.className} >\r\n                <div className={classes.tag} style={style}>\r\n                    {this.props.text}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Tag);","import React, { Component } from 'react';\r\nimport { Theme } from '@material-ui/core';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        marker: {\r\n            width: 20,\r\n            height: 20,\r\n            borderRadius: 5,\r\n        }\r\n    }\r\n);\r\n\r\nexport interface IStatusMarkerProps extends WithStyles<typeof styles> {\r\n    className: string\r\n    color: string\r\n}\r\n\r\nclass StatusMarker extends Component<IStatusMarkerProps> {\r\n    render = () => {\r\n        const { classes } = this.props;\r\n\r\n        const style = {\r\n            backgroundColor: this.props.color\r\n        };\r\n\r\n        return (\r\n            <div className={this.props.className} >\r\n                <div className={classes.marker} style={style}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(StatusMarker);","import React, { Component } from 'react';\r\nimport { Avatar, Theme } from '@material-ui/core';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Tag from './Tag';\r\nimport StatusMarker from './StatusMarker';\r\nimport UserStatus from '../model/UserStatus';\r\nimport User from '../model/User';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            padding: theme.spacing(1)\r\n        },\r\n        avatarRing: {\r\n            width: 60,\r\n            height: 60,\r\n            margin: -2 * theme.spacing(1),\r\n            marginLeft: theme.spacing(1),\r\n            backgroundColor: '#fff'\r\n        },\r\n        avatar: {\r\n            width: 55,\r\n            height: 55,\r\n            margin: theme.spacing(1),\r\n            backgroundColor: '#fff',\r\n        },\r\n        cardContent: {\r\n            padding: 10,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'row',\r\n            backgroundColor: '#fff',\r\n            borderRadius: 3\r\n        },\r\n        statusDot: {\r\n            marginLeft: 20 + theme.spacing(2)\r\n        },\r\n        initials: {\r\n            marginLeft: theme.spacing(1),\r\n            fontWeight: 'bold',\r\n            color: theme.palette.text.disabled\r\n        },\r\n        userName: {\r\n            flexGrow: 1,\r\n            textAlign: 'right',\r\n            fontWeight: theme.typography.fontWeightBold,\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n        },\r\n        status: {\r\n            marginLeft: theme.spacing(1)\r\n        }\r\n    });\r\n\r\nexport interface IUserStatusItemProps extends WithStyles<typeof styles> {\r\n    user: User,\r\n    status: UserStatus\r\n}\r\n\r\nclass UserStatusItem extends Component<IUserStatusItemProps> {\r\n    render = () => {\r\n        const { classes } = this.props;\r\n\r\n        var statusText = this.getStatusText(this.props.status);\r\n        var statusColor = this.getStatusColor(this.props.status);\r\n\r\n        return (\r\n            <Draggable draggableId={this.props.user.initials} index={0}>\r\n                {(provided, snapshot) => (\r\n                    <div className={classes.card} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <div className={classes.cardContent}>\r\n                            <Avatar className={classes.avatarRing}>\r\n                                <Avatar className={classes.avatar} src={this.props.user.avatarUrl} />\r\n                            </Avatar>\r\n                            <StatusMarker className={classes.statusDot} color={`${statusColor}`} />\r\n                            <div className={classes.initials}>{this.props.user.initials}</div>\r\n                            <div className={classes.userName}>{this.props.user.name}</div>\r\n                            <Tag className={classes.status} text={statusText} color={`${statusColor}`} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n\r\n    private getStatusText = (status: UserStatus): string => {\r\n        if (status === UserStatus.Office) return 'available';\r\n        if (status === UserStatus.Remote) return 'remotely';\r\n        if (status === UserStatus.Absent) return 'absent';\r\n        return 'unknown';\r\n    }\r\n\r\n    private getStatusColor = (status: UserStatus): string => {\r\n        if (status === UserStatus.Office) return 'green';\r\n        if (status === UserStatus.Remote) return 'blue';\r\n        if (status === UserStatus.Absent) return 'red';\r\n        return 'gray';\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UserStatusItem);","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { Theme } from '@material-ui/core';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport UserStatusItem from './UserStatusItem';\r\nimport UserStatus from '../model/UserStatus';\r\nimport User from '../model/User';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n    });\r\n\r\nexport interface IStatusColumnProps extends WithStyles<typeof styles> {\r\n    status: UserStatus,\r\n    users: Array<User>\r\n}\r\n\r\nclass StatusColumn extends Component<IStatusColumnProps> {\r\n    render = () => {\r\n        return (\r\n            <Droppable droppableId={this.props.status.toString()} type='USER'>\r\n                {(provided, snapshot) => (\r\n                    <div className='status-column' ref={provided.innerRef} {...provided.droppableProps}>\r\n                        <div className='column-content'>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={1} justify=\"center\">\r\n                                    {\r\n                                        this.props.users.map((user) => {\r\n                                            return (\r\n                                                <Grid key={user.initials} item xs={12} sm={12}>\r\n                                                    <UserStatusItem user={user} status={this.props.status} />\r\n                                                </Grid>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                    {provided.placeholder}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(StatusColumn);","import React, { Component } from 'react';\r\nimport { Theme } from '@material-ui/core';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tag from './Tag';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        menuBar: {\r\n            width: '100%',\r\n            height: 40,\r\n            padding: theme.spacing(1),\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            marginLeft: theme.spacing(8),\r\n            fontWeight: theme.typography.fontWeightBold\r\n        },\r\n        date: {\r\n            flexGrow: 1,\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n        availability: {\r\n            marginRight: theme.spacing(12),\r\n        },\r\n        availabilityTag: {\r\n            display: 'inline-block',\r\n            marginRight: 10,\r\n            marginLeft: 10\r\n        }\r\n    });\r\n\r\nexport interface IMenuBarProps extends WithStyles<typeof styles> {\r\n    availablePeopleCount: number,\r\n    remotePeopleCount: number,\r\n    absentPeopleCount: number\r\n}\r\n\r\nclass MenuBar extends Component<IMenuBarProps> {\r\n    render = () => {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.menuBar} square={true} elevation={1}>\r\n                <div className={classes.title}>\r\n                    WorkZone Status Board\r\n                </div>\r\n                <div className={classes.date}>\r\n                    Monday, April 22\r\n                </div>\r\n                <div className={classes.availability} >\r\n                    <Tag className={classes.availabilityTag} text={`${this.props.availablePeopleCount}`} color='green' />\r\n                    <Tag className={classes.availabilityTag} text={`${this.props.remotePeopleCount}`} color='blue'/>\r\n                    <Tag className={classes.availabilityTag} text={`${this.props.absentPeopleCount}`} color='red'/>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MenuBar);","import React, { Component } from 'react';\r\nimport { Theme } from '@material-ui/core';\r\nimport { WithStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DragDropContext, DropResult, ResponderProvided } from 'react-beautiful-dnd';\r\nimport StatusColumn from './StatusColumn';\r\nimport MenuBar from './MenuBar';\r\nimport UserStatus from '../model/UserStatus';\r\nimport UserStatusController from '../controllers/UserStatusController';\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        dashboard: {\r\n        },\r\n        statusField: {\r\n            width: '100%',\r\n            flexGrow: 1,\r\n            paddingTop: theme.spacing(3),\r\n            paddingLeft: theme.spacing(7),\r\n            paddingRight: theme.spacing(7)\r\n        },\r\n        statusColumn: {\r\n            // TODO make it take up entire vertical space\r\n        }\r\n    });\r\n\r\nexport interface IDashboardProps extends WithStyles<typeof styles> {\r\n    statusController: UserStatusController\r\n}\r\n\r\nclass Dashboard extends Component<IDashboardProps> {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        var controller = this.props.statusController;\r\n\r\n        var availableUsers = controller.getUsersWithStatus(UserStatus.Office);\r\n        var remoteUsers = controller.getUsersWithStatus(UserStatus.Remote);\r\n        var absentUsers = controller.getUsersWithStatus(UserStatus.Absent);\r\n\r\n        return (\r\n            <div className={classes.dashboard}>\r\n                <MenuBar\r\n                    availablePeopleCount={availableUsers.length}\r\n                    remotePeopleCount={remoteUsers.length}\r\n                    absentPeopleCount={absentUsers.length} />\r\n\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    <Grid container className={classes.statusField} spacing={4} justify=\"center\">\r\n                        <Grid item xs className={classes.statusColumn}>\r\n                            <StatusColumn status={UserStatus.Office} users={availableUsers} />\r\n                        </Grid>\r\n                        <Grid item xs className={classes.statusColumn}>\r\n                            <StatusColumn status={UserStatus.Remote} users={remoteUsers} />\r\n                        </Grid>\r\n                        <Grid item xs className={classes.statusColumn}>\r\n                            <StatusColumn status={UserStatus.Absent} users={absentUsers} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onDragEnd = (result: DropResult, provided: ResponderProvided) => {\r\n        if (result.reason !== 'DROP' || result.destination == null) return;\r\n\r\n        var userInitials = result.draggableId;\r\n        var dstColumnDroppableId = result.destination.droppableId;\r\n        var newStatus = this.getColumnStatusByDroppableId(dstColumnDroppableId);\r\n\r\n        this.props.statusController.setUserStatus(userInitials, newStatus);\r\n        this.setState({});\r\n    }\r\n\r\n    private getColumnStatusByDroppableId = (droppableId: string) => {\r\n        if (droppableId === UserStatus.Office.toString()) return UserStatus.Office;\r\n        if (droppableId === UserStatus.Remote.toString()) return UserStatus.Remote;\r\n        if (droppableId === UserStatus.Absent.toString()) return UserStatus.Absent;\r\n        return UserStatus.Unknown\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","export default class User {\r\n    initials: string;\r\n    name: string;\r\n    avatarUrl: string;\r\n\r\n    constructor(initials: string, name: string, avatarUrl: string) {\r\n        this.initials = initials;\r\n        this.name = name;\r\n        this.avatarUrl = avatarUrl;\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport UserSatusController from './controllers/UserStatusController';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Dashboard statusController={new UserSatusController()} />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import User from '../model/User';\r\nimport UserStatus from '../model/UserStatus';\r\n\r\nexport default class UserStatusController {\r\n    private avatar = 'https://vignette.wikia.nocookie.net/james-camerons-avatar/images/d/d4/Neytiri_Profil.jpg/revision/latest?cb=20100226001342&path-prefix=pl';\r\n\r\n    private availableUsers = [\r\n        new User('EWK', 'Ewa Kotowska', this.avatar),\r\n        new User('PHG', 'Pham Quoc Hing', this.avatar),\r\n        new User('HGO', 'Hugo Assuncao', this.avatar),\r\n        new User('THB', 'Thakujereet Bharwana', this.avatar)\r\n    ];\r\n    private remoteUsers = [\r\n        new User('SAF', 'Salome Fernan', this.avatar),\r\n        new User('TAG', 'Tatiana Gagelman', this.avatar),\r\n        new User('EVA', 'Evelyn Allen', this.avatar)\r\n    ];\r\n    private absentUsers = [\r\n        new User('NOG', 'Nout Golstein', this.avatar),\r\n        new User('FOA', 'Foroogh Abdi', this.avatar),\r\n        new User('SBW', 'Sebastian Westergen', this.avatar),\r\n        new User('CHC', 'Choike Chinasa', this.avatar),\r\n        new User('HEH', 'Herse Hedman', this.avatar)\r\n    ];\r\n\r\n    public getUsersWithStatus = (status: UserStatus): Array<User> => {\r\n        if (status === UserStatus.Office) return this.availableUsers;\r\n        if (status === UserStatus.Remote) return this.remoteUsers;\r\n        if (status === UserStatus.Absent) return this.absentUsers;\r\n        return [];\r\n    }\r\n\r\n    public setUserStatus = (userInitials: string, status: UserStatus) => {\r\n        var user = this.removeUserFromLists(userInitials);\r\n\r\n        if (user == null) return;\r\n\r\n        if (status === UserStatus.Office)       this.availableUsers = this.availableUsers.concat(user);\r\n        else if (status === UserStatus.Remote)  this.remoteUsers = this.remoteUsers.concat(user);\r\n        else if (status === UserStatus.Absent)  this.absentUsers = this.absentUsers.concat(user);\r\n    }\r\n\r\n    private removeUserFromLists = (userInitials: string): User | null => {\r\n        var user = null;\r\n        for (var i = 0; i < this.availableUsers.length; ++i)\r\n            if (this.availableUsers[i].initials === userInitials) {\r\n                user = this.availableUsers[i];\r\n                this.availableUsers.splice(i, 1);\r\n            }\r\n        if (user !== null) return user;\r\n\r\n        for (i = 0; i < this.remoteUsers.length; ++i)\r\n            if (this.remoteUsers[i].initials === userInitials) {\r\n                user = this.remoteUsers[i];\r\n                this.remoteUsers.splice(i, 1);\r\n            }\r\n        if (user !== null) return user;\r\n\r\n        for (i = 0; i < this.absentUsers.length; ++i)\r\n            if (this.absentUsers[i].initials === userInitials) {\r\n                user = this.absentUsers[i];\r\n                this.absentUsers.splice(i, 1);\r\n            }\r\n\r\n        return user;\r\n    }\r\n}"],"sourceRoot":""}